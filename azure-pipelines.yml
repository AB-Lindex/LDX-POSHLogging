trigger: none

stages:
- stage: BuildAndVersion
  pool:
    name: ITTS01
  displayName: Increment Version and Build
  jobs:
  - job: IncrementVersion
    displayName: Increment Version, Build, Commit, Pack and Push
    steps:
    - checkout: self
      persistCredentials: true

    # Step 1: Increment the version number in .nuspec and .psd1
    - task: PowerShell@2
      displayName: "Increment version in .psd1"
      inputs:
        targetType: inline
        script: |
          $psd1Path = "$(Build.SourcesDirectory)\LDXLogging\LDXLogging.psd1"

          # Function to increment version
          function Increment-Version($version) {
              $parts = $version -split '\.'
              $parts[2] = [int]$parts[2] + 1 # Increment the patch version
              return "$($parts[0]).$($parts[1]).$($parts[2])"
          }

          # Increment version in .psd1
          $psd1Content = Import-PowerShellDataFile -Path $psd1Path
          $currentVersion = $psd1Content.ModuleVersion
          Write-Host "Current version: $currentVersion"
          $newVersion = Increment-Version $currentVersion
          $psd1Content = Get-Content $psd1Path
          $psd1Content = $psd1Content -replace '(?<=ModuleVersion\s*=\s*'')[^'']+', $newVersion
          Set-Content $psd1Path $psd1Content
          Write-Host "Updated version: $newVersion"

          # Output the new version for use in subsequent steps
          Write-Output "##vso[task.setvariable variable=newVersion]$newVersion"
          Write-Output "##vso[task.setvariable variable=psd1Path]$psd1Path"

    # Step 2: Commit the updated files back to the repository
    - script: |
        git config user.name "$(System.DefinitionName)"
        git config user.email "noreply@azure.com"
        git add "$(psd1Path)"
        git commit -m "Incremented version to $(newVersion)"
        git push origin HEAD:$(Build.SourceBranchName)
      displayName: "Commit updated version to repository"
